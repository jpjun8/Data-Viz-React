{"version":3,"sources":["data/red.csv","data/white.csv","data/red-white.csv","components/Tab.js","components/Tabs.js","App.js","reportWebVitals.js","index.js"],"names":["Tab","onClick","props","label","this","activeTab","className","Component","Tabs","onClickTabItem","tab","setState","state","children","map","child","App","redAlc","bind","redDen","whiteAlc","whiteDen","bothAlc","bothDen","drawBoxPlot","red_quality","red_alcohol","red_density","white_quality","white_alcohol","white_density","flag","color","raw","raw2","temp","qual","margin","width","height","drawBox","data","svg","y","number","data_sorted","sort","d3","q1","median","q3","iqr","min","max","center","append","attr","boxwidth","style","selectAll","enter","d","select","alcohol","density","red","then","i","length","push","quality","x","parseFloat","filter","elem","pos","indexOf","a","b","Object","keys","key","index","document","getElementsByClassName","remove","console","log","range","domain","paddingInner","paddingOuter","call","text","white","combined","id","Button","variant","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e199bdb9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/red.421c438b.csv\";","export default __webpack_public_path__ + \"static/media/white.c24cf293.csv\";","export default __webpack_public_path__ + \"static/media/red-white.43fbeefc.csv\";","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Tab extends Component {\r\n    static propTypes = {\r\n        activeTab: PropTypes.string.isRequired,\r\n        label: PropTypes.string.isRequired,\r\n        onClick: PropTypes.func.isRequired,\r\n    };\r\n\r\n    onClick = () => {\r\n        const {label, onClick} = this.props;\r\n        onClick(label);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            onClick,\r\n            props: {\r\n                activeTab,\r\n                label,\r\n            },\r\n        } = this;\r\n\r\n        let className = 'tab-list-item';\r\n\r\n        if(activeTab === label) {\r\n            className += ' tab-list-active';\r\n        }\r\n\r\n        return (\r\n            <button className={className}\r\n            onClick={onClick}\r\n            >\r\n                {label}\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tab;","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport Tab from './Tab';\r\nimport { render } from \"@testing-library/react\";\r\n\r\nclass Tabs extends Component {\r\n    static propTypes = {\r\n        children: PropTypes.instanceOf(Array).isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeTab: this.props.children[0].props.label,\r\n        };\r\n    }\r\n\r\n    onClickTabItem = (tab) => {\r\n        this.setState({ activeTab: tab });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            onClickTabItem,\r\n            props: {\r\n                children,\r\n            },\r\n            state: {\r\n                activeTab,\r\n            }\r\n        } = this;\r\n\r\n        return (\r\n            <div className=\"tabs\">\r\n                <div className=\"tab-list\">\r\n                    {children.map((child) => {\r\n                        const { label } = child.props;\r\n\r\n                        return (\r\n                            <Tab\r\n                            activeTab={activeTab}\r\n                            key={label}\r\n                            label={label}\r\n                            onClick={onClickTabItem}\r\n                            />\r\n                        );\r\n                    })}\r\n                </div>\r\n                <div className=\"tab-content\">\r\n                    {children.map((child) => {\r\n                        if(child.props.label !== activeTab) return undefined;\r\n                        return child.props.children;\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tabs;","import React, {Component} from 'react';\nimport './App.css';\nimport * as d3 from 'd3';\n\nimport red from './data/red.csv';\nimport white from './data/white.csv';\nimport combined from './data/red-white.csv';\n\nimport Tabs from './components/Tabs';\n\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    // this.drawBox = this.drawBox.bind(this);\n    this.redAlc = this.redAlc.bind(this);\n    this.redDen = this.redDen.bind(this);\n    this.whiteAlc = this.whiteAlc.bind(this);\n    this.whiteDen = this.whiteDen.bind(this);\n    this.bothAlc = this.bothAlc.bind(this);\n    this.bothDen = this.bothDen.bind(this);\n\n    this.drawBoxPlot = this.drawBoxPlot.bind(this);\n\n    this.state = {\n      red_quality: [],\n      red_alcohol: [],\n      red_density: [],\n      white_quality: [],\n      white_alcohol: [],\n      white_density: []\n    };\n  }\n\n  componentDidMount() {\n    // this.drawBoxPlot();\n  }\n\n  drawBoxPlot(flag, color) {\n    // extract unique quality values -- qual\n    let raw = []; // quality\n    let raw2 = []; // alcohol\n    let temp = [];\n    let qual = [];\n\n    var margin = {\n        top: 10,\n        right: 30,\n        bottom: 30,\n        left: 40\n      },\n      width = 460 - margin.left - margin.right,\n      height = 600 - margin.top - margin.bottom;\n    \n    // function to draw box w/ data and domain (qual)\n    function drawBox(data, svg, y, color, className, number) {\n      var data_sorted = data.sort(d3.ascending)\n      var q1 = d3.quantile(data_sorted, .25);\n      var median = d3.quantile(data_sorted, .5);\n      var q3 = d3.quantile(data_sorted, .75);\n      var iqr = q3 - q1;\n      var min = q1 - 1.5 * iqr;\n      var max = q3 + 1.5 * iqr;\n\n      // console.log(data_sorted);\n      \n      var gap = (width / 12) * 2 // 65\n      var center = (width / 12) + number * gap\n      var boxwidth = 50\n\n      svg.append(\"line\")\n        .attr(\"x1\", center)\n        .attr(\"x2\", center)\n        .attr(\"y1\", y(min))\n        .attr(\"y2\", y(max))\n        .attr(\"stroke\", \"black\")\n\n      svg.append(\"rect\")\n        .attr(\"x\", center - boxwidth / 2)\n        .attr(\"y\", y(q3))\n        .attr(\"height\", (y(q1) - y(q3)))\n        .attr(\"width\", boxwidth)\n        .attr(\"class\", className)\n        .attr(\"stroke\", \"black\")\n        .style(\"fill\", color)\n\n      svg.selectAll(\"toto\")\n        .data([min, median, max])\n        .enter()\n        .append(\"line\")\n        .attr(\"x1\", center - boxwidth / 2)\n        .attr(\"x2\", center + boxwidth / 2)\n        .attr(\"y1\", function (d) {\n          return y(d)\n        })\n        .attr(\"y2\", function (d) {\n          return y(d)\n        })\n        .attr(\"stroke\", \"black\")\n\n      svg.select(\".\"+className)\n      .style(\"border\", \"1em\")\n\n    }\n\n    if(color === \"red\") {\n      let alcohol = {\n        3: [],\n        4: [],\n        5: [],\n        6: [],\n        7: [],\n        8: []\n      };\n\n      let density = {\n        3: [],\n        4: [],\n        5: [],\n        6: [],\n        7: [],\n        8: []\n      };\n      d3.csv(red).then(function (data) {\n        for (let i = 0; i < data.length; i++) {\n          raw.push(data[i].quality);\n          raw2.push(data[i].alcohol);\n\n          // assign each alcohol values for each quality\n          let x = parseFloat(data[i].alcohol);\n          let y = parseFloat(data[i].density);\n          if (data[i].quality === \"3\") {\n            alcohol[\"3\"].push(x);\n            density[\"3\"].push(y);\n          }\n          if (data[i].quality === \"4\") {\n            alcohol[\"4\"].push(x);\n            density[\"4\"].push(y);\n          }\n          if (data[i].quality === \"5\") {\n            alcohol[\"5\"].push(x);\n            density[\"5\"].push(y);\n          }\n          if (data[i].quality === \"6\") {\n            alcohol[\"6\"].push(x);\n            density[\"6\"].push(y);\n          }\n          if (data[i].quality === \"7\") {\n            alcohol[\"7\"].push(x);\n            density[\"7\"].push(y);\n          }\n          if (data[i].quality === \"8\") {\n            alcohol[\"8\"].push(x);\n            density[\"8\"].push(y);\n          }\n          if (data[i].quality === \"9\") {\n            alcohol[\"9\"].push(x);\n            density[\"9\"].push(y);\n          }\n        }\n\n        // parse to float\n        for (let i = 0; i < raw.length; i++) {\n          raw[i] = parseFloat(raw[i]);\n          raw2[i] = parseFloat(raw2[i]);\n        }\n\n        // only unique quality values to temp\n        temp = raw.filter(function (elem, pos) {\n          return raw.indexOf(elem) === pos;\n        });\n\n        // push to real variable\n        qual.push(...temp);\n\n        // sort ascending\n        qual.sort(function (a, b) {\n          return a - b;\n        });\n\n        // sort all arrays inside 'alcohol' object\n        Object.keys(alcohol).map(function (key, index) {\n          alcohol[key].sort((a, b) => {\n            return a - b;\n          });\n        })\n\n        // sort all arrays inside 'density' object\n        Object.keys(density).map(function (key, index) {\n          density[key].sort((a, b) => {\n            return a - b;\n          });\n        })\n\n        var test = document.getElementsByClassName('graph');\n        if (test) {\n          d3.select('.graph').remove();\n          console.log(\"graph removed\");\n        }\n\n        var svg = d3.select(\"#redWine\")\n          .append(\"svg\")\n          .attr(\"width\", width + margin.left + margin.right)\n          .attr(\"height\", height + margin.top + margin.bottom)\n          .attr(\"class\", \"graph\")\n          .append(\"g\")\n          .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        if (flag === 1) { // alcohol\n          // Show the X scale\n          var x = d3.scaleBand()\n            .range([0, width])\n            .domain(qual)\n            .paddingInner(1)\n            .paddingOuter(.5)\n          svg.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(d3.axisBottom(x))\n\n          // label x axis\n          svg.append(\"text\")\n            .attr(\"transform\", \"translate(\" + (width / 2) + \" ,\" +\n              (height + margin.top + 20) + \")\")\n            .style(\"text-anchor\", \"middle\")\n            .text(\"Quality\")\n\n          // Show the Y scale\n          var y = d3.scaleLinear()\n            .domain([7, 16])\n            .range([height, 0]);\n          svg.append(\"g\")\n            .call(d3.axisLeft(y))\n\n          drawBox(alcohol[\"3\"], svg, y, \"green\", \"first\", 0);\n          drawBox(alcohol[\"4\"], svg, y, \"yellow\", \"second\", 1);\n          drawBox(alcohol[\"5\"], svg, y, \"blue\", \"third\", 2);\n          drawBox(alcohol[\"6\"], svg, y, \"orange\", \"fourth\", 3);\n          drawBox(alcohol[\"7\"], svg, y, \"black\", \"fifth\", 4);\n          drawBox(alcohol[\"8\"], svg, y, \"purple\", \"sixth\", 5);\n\n        } else if (flag === 2) { // density\n          // Show the X scale\n          var x = d3.scaleBand()\n            .range([0, width])\n            .domain(qual)\n            .paddingInner(1)\n            .paddingOuter(.5)\n          svg.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(d3.axisBottom(x))\n\n          // label x axis\n          svg.append(\"text\")\n            .attr(\"transform\", \"translate(\" + (width / 2) + \" ,\" +\n              (height + margin.top + 20) + \")\")\n            .style(\"text-anchor\", \"middle\")\n            .text(\"Quality\")\n\n          // Show the Y scale\n          var y = d3.scaleLinear()\n            .domain([0.985, 1.005])\n            .range([height, 0]);\n          svg.append(\"g\")\n            .call(d3.axisLeft(y))\n\n          drawBox(density[\"3\"], svg, y, \"green\", \"first\", 0);\n          drawBox(density[\"4\"], svg, y, \"yellow\", \"second\", 1);\n          drawBox(density[\"5\"], svg, y, \"blue\", \"third\", 2);\n          drawBox(density[\"6\"], svg, y, \"orange\", \"fourth\", 3);\n          drawBox(density[\"7\"], svg, y, \"black\", \"fifth\", 4);\n          drawBox(density[\"8\"], svg, y, \"purple\", \"sixth\", 5);\n        }\n      });\n    } else if(color === \"white\") {\n      let alcohol = {\n        3: [],\n        4: [],\n        5: [],\n        6: [],\n        7: [],\n        8: [],\n        9: []\n      };\n\n      let density = {\n        3: [],\n        4: [],\n        5: [],\n        6: [],\n        7: [],\n        8: [],\n        9: []\n      };\n\n      d3.csv(white).then(function (data) {\n        for(let i = 0; i < data.length; i++) {\n          raw.push(data[i].quality);\n          let x = parseFloat(data[i].alcohol);\n          let y = parseFloat(data[i].density);\n          if (data[i].quality === \"3\") {\n            alcohol[\"3\"].push(x);\n            density[\"3\"].push(y);\n          } \n          if (data[i].quality === \"4\") {\n            alcohol[\"4\"].push(x);\n            density[\"4\"].push(y);\n          }\n          if (data[i].quality === \"5\") {\n            alcohol[\"5\"].push(x);\n            density[\"5\"].push(y);\n          }\n          if (data[i].quality === \"6\") {\n            alcohol[\"6\"].push(x);\n            density[\"6\"].push(y);\n          }\n          if (data[i].quality === \"7\") {\n            alcohol[\"7\"].push(x);\n            density[\"7\"].push(y);\n          }\n          if (data[i].quality === \"8\") {\n            alcohol[\"8\"].push(x);\n            density[\"8\"].push(y);\n          }\n          if (data[i].quality === \"9\") {\n            alcohol[\"9\"].push(x);\n            density[\"9\"].push(y);\n          }\n        }\n        \n        // parse to float\n        for (let i = 0; i < raw.length; i++) {\n          raw[i] = parseFloat(raw[i]);\n        }\n        \n        // only unique quality values to temp\n        temp = raw.filter(function (elem, pos) {\n          return raw.indexOf(elem) === pos;\n        });\n        \n        // push to real variable\n        qual.push(...temp);\n        \n        // sort ascending\n        qual.sort(function (a, b) {\n          return a - b;\n        });\n        \n        // sort all arrays inside 'alcohol' object\n        Object.keys(alcohol).map(function (key, index) {\n          alcohol[key].sort((a, b) => {\n            return a - b;\n          });\n        })\n        \n        // sort all arrays inside 'density' object\n        Object.keys(density).map(function (key, index) {\n          density[key].sort((a, b) => {\n            return a - b;\n          });\n        })\n\n        var test = document.getElementsByClassName('graph');\n        if (test) {\n          d3.select('.graph').remove();\n          console.log(\"graph removed\");\n        }\n        \n        var svg = d3.select(\"#whiteWine\")\n          .append(\"svg\")\n          .attr(\"width\", width + margin.left + margin.right)\n          .attr(\"height\", height + margin.top + margin.bottom)\n          .attr(\"class\", \"graph\")\n          .append(\"g\")\n          .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        if(flag === 1) { // alcohol\n          // Show the X scale\n          var x = d3.scaleBand()\n            .range([0, width])\n            .domain(qual)\n            .paddingInner(1)\n            .paddingOuter(.5)\n          svg.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(d3.axisBottom(x))\n          \n          // label x axis\n          svg.append(\"text\")\n          .attr(\"transform\", \"translate(\" + (width / 2) + \" ,\" +\n          (height + margin.top + 20) + \")\")\n          .style(\"text-anchor\", \"middle\")\n          .text(\"Quality\")\n\n          // Show the Y scale\n          var y = d3.scaleLinear()\n            .domain([6, 16])\n            .range([height, 0]);\n          svg.append(\"g\")\n            .call(d3.axisLeft(y))\n\n          drawBox(alcohol[\"3\"], svg, y, \"green\", \"first\", 0);\n          drawBox(alcohol[\"4\"], svg, y, \"yellow\", \"second\", 1);\n          drawBox(alcohol[\"5\"], svg, y, \"blue\", \"third\", 2);\n          drawBox(alcohol[\"6\"], svg, y, \"orange\", \"fourth\", 3);\n          drawBox(alcohol[\"7\"], svg, y, \"black\", \"fifth\", 4);\n          drawBox(alcohol[\"8\"], svg, y, \"purple\", \"sixth\", 5);\n        } else if(flag === 2) { // density\n          // Show the X scale\n          var x = d3.scaleBand()\n            .range([0, width])\n            .domain(qual)\n            .paddingInner(1)\n            .paddingOuter(.5)\n          svg.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(d3.axisBottom(x))\n\n          // label x axis\n          svg.append(\"text\")\n            .attr(\"transform\", \"translate(\" + (width / 2) + \" ,\" +\n              (height + margin.top + 20) + \")\")\n            .style(\"text-anchor\", \"middle\")\n            .text(\"Quality\")\n\n          // Show the Y scale\n          var y = d3.scaleLinear()\n            .domain([0.985, 1.005])\n            .range([height, 0]);\n          svg.append(\"g\")\n            .call(d3.axisLeft(y))\n\n          drawBox(density[\"3\"], svg, y, \"green\", \"first\", 0);\n          drawBox(density[\"4\"], svg, y, \"yellow\", \"second\", 1);\n          drawBox(density[\"5\"], svg, y, \"blue\", \"third\", 2);\n          drawBox(density[\"6\"], svg, y, \"orange\", \"fourth\", 3);\n          drawBox(density[\"7\"], svg, y, \"black\", \"fifth\", 4);\n          drawBox(density[\"8\"], svg, y, \"purple\", \"sixth\", 5);\n        }\n\n      });\n    } else if(color == \"combined\") {\n      let alcohol = {\n        3: [],\n        4: [],\n        5: [],\n        6: [],\n        7: [],\n        8: [],\n        9: []\n      };\n\n      let density = {\n        3: [],\n        4: [],\n        5: [],\n        6: [],\n        7: [],\n        8: [],\n        9: []\n      };\n\n      d3.csv(combined).then(function (data) {\n        for (let i = 0; i < data.length; i++) {\n          raw.push(data[i].quality);\n          let x = parseFloat(data[i].alcohol);\n          let y = parseFloat(data[i].density);\n          if (data[i].quality === \"3\") {\n            alcohol[\"3\"].push(x);\n            density[\"3\"].push(y);\n          }\n          if (data[i].quality === \"4\") {\n            alcohol[\"4\"].push(x);\n            density[\"4\"].push(y);\n          }\n          if (data[i].quality === \"5\") {\n            alcohol[\"5\"].push(x);\n            density[\"5\"].push(y);\n          }\n          if (data[i].quality === \"6\") {\n            alcohol[\"6\"].push(x);\n            density[\"6\"].push(y);\n          }\n          if (data[i].quality === \"7\") {\n            alcohol[\"7\"].push(x);\n            density[\"7\"].push(y);\n          }\n          if (data[i].quality === \"8\") {\n            alcohol[\"8\"].push(x);\n            density[\"8\"].push(y);\n          }\n          if (data[i].quality === \"9\") {\n            alcohol[\"9\"].push(x);\n            density[\"9\"].push(y);\n          }\n        }\n\n        // parse to float\n        for (let i = 0; i < raw.length; i++) {\n          raw[i] = parseFloat(raw[i]);\n        }\n\n        // only unique quality values to temp\n        temp = raw.filter(function (elem, pos) {\n          return raw.indexOf(elem) === pos;\n        });\n\n        // push to real variable\n        qual.push(...temp);\n\n        // sort ascending\n        qual.sort(function (a, b) {\n          return a - b;\n        });\n\n        // sort all arrays inside 'alcohol' object\n        Object.keys(alcohol).map(function (key, index) {\n          alcohol[key].sort((a, b) => {\n            return a - b;\n          });\n        })\n\n        // sort all arrays inside 'density' object\n        Object.keys(density).map(function (key, index) {\n          density[key].sort((a, b) => {\n            return a - b;\n          });\n        })\n\n        var test = document.getElementsByClassName('graph');\n        if (test) {\n          d3.select('.graph').remove();\n          console.log(\"graph removed\");\n        }\n\n        var svg = d3.select(\"#combined\")\n          .append(\"svg\")\n          .attr(\"width\", width + margin.left + margin.right)\n          .attr(\"height\", height + margin.top + margin.bottom)\n          .attr(\"class\", \"graph\")\n          .append(\"g\")\n          .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        if (flag === 1) { // alcohol\n          // Show the X scale\n          var x = d3.scaleBand()\n            .range([0, width])\n            .domain(qual)\n            .paddingInner(1)\n            .paddingOuter(.5)\n          svg.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(d3.axisBottom(x))\n\n          // label x axis\n          svg.append(\"text\")\n            .attr(\"transform\", \"translate(\" + (width / 2) + \" ,\" +\n              (height + margin.top + 20) + \")\")\n            .style(\"text-anchor\", \"middle\")\n            .text(\"Quality\")\n\n          // Show the Y scale\n          var y = d3.scaleLinear()\n            .domain([6, 16])\n            .range([height, 0]);\n          svg.append(\"g\")\n            .call(d3.axisLeft(y))\n\n          drawBox(alcohol[\"3\"], svg, y, \"green\", \"first\", 0);\n          drawBox(alcohol[\"4\"], svg, y, \"yellow\", \"second\", 1);\n          drawBox(alcohol[\"5\"], svg, y, \"blue\", \"third\", 2);\n          drawBox(alcohol[\"6\"], svg, y, \"orange\", \"fourth\", 3);\n          drawBox(alcohol[\"7\"], svg, y, \"black\", \"fifth\", 4);\n          drawBox(alcohol[\"8\"], svg, y, \"purple\", \"sixth\", 5);\n        } else if (flag === 2) { // density\n          // Show the X scale\n          var x = d3.scaleBand()\n            .range([0, width])\n            .domain(qual)\n            .paddingInner(1)\n            .paddingOuter(.5)\n          svg.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(d3.axisBottom(x))\n\n          // label x axis\n          svg.append(\"text\")\n          .attr(\"transform\", \"translate(\" + (width / 2) + \" ,\" +\n          (height + margin.top + 20) + \")\")\n          .style(\"text-anchor\", \"middle\")\n          .text(\"Quality\")\n\n          // Show the Y scale\n          var y = d3.scaleLinear()\n            .domain([0.982, 1.005])\n            .range([height, 0]);\n          svg.append(\"g\")\n            .call(d3.axisLeft(y))\n\n          drawBox(density[\"3\"], svg, y, \"green\", \"first\", 0);\n          drawBox(density[\"4\"], svg, y, \"yellow\", \"second\", 1);\n          drawBox(density[\"5\"], svg, y, \"blue\", \"third\", 2);\n          drawBox(density[\"6\"], svg, y, \"orange\", \"fourth\", 3);\n          drawBox(density[\"7\"], svg, y, \"black\", \"fifth\", 4);\n          drawBox(density[\"8\"], svg, y, \"purple\", \"sixth\", 5);\n        }\n\n      });\n    }\n  }\n\n  redAlc() {\n    this.setState({\n      alcohol: true,\n      density: false\n    });\n    this.drawBoxPlot(1, \"red\");\n  }\n\n  redDen() {\n    this.setState({\n      alcohol: false,\n      density: true\n    });\n    this.drawBoxPlot(2, \"red\");\n  }\n\n  whiteAlc() {\n    this.setState({\n      alcohol: true,\n      density: false\n    });\n    this.drawBoxPlot(1, \"white\");\n  }\n\n  whiteDen() {\n    this.setState({\n      alcohol: false,\n      density: true\n    });\n    this.drawBoxPlot(2, \"white\");\n  }\n\n  bothAlc() {\n    this.setState({\n      alcohol: true,\n      density: false\n    });\n    this.drawBoxPlot(1, \"combined\");\n  }\n\n  bothDen() {\n    this.setState({\n      alcohol: false,\n      density: true\n    });\n    this.drawBoxPlot(2, \"combined\");\n  }\n\n  render() {\n\n    return(\n      <div className=\"App\">\n        <h1 id=\"heading\">Wine Quality vs. Alcohol & Density</h1>\n        <Tabs>\n          <div label=\"Home\">\n            The <em>Home</em> Page! <br/ >\n          </div>\n          <div label=\"Red\">\n            <Button variant=\"outline-primary\" onClick={this.redAlc}>Draw Quality vs. Alcohol</Button>{' '}\n            <Button variant=\"outline-secondary\" onClick={this.redDen}>Draw Quality vs. Density</Button>\n            <div id=\"redWine\"></div>\n            <svg></svg>\n          </div>\n          <div label=\"White\">\n            <Button variant=\"outline-primary\" onClick={this.whiteAlc}>Draw Quality vs. Alcohol</Button>{' '}\n            <Button variant=\"outline-secondary\" onClick={this.whiteDen}>Draw Quality vs. Density</Button>\n            <div id=\"whiteWine\"></div>\n            <svg></svg>\n          </div>\n          <div label=\"Red + White\">\n            <Button variant=\"outline-primary\" onClick={this.bothAlc}>Draw Quality vs. Alcohol</Button>{' '}\n            <Button variant=\"outline-secondary\" onClick={this.bothDen}>Draw Quality vs. Density</Button>\n            <div id=\"combined\"></div>\n            <svg></svg>\n          </div>\n        </Tabs>\n      </div>\n      \n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}